name: Deploy with Supabase

on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      SUPABASE_ACCESS_TOKEN: ${{ secrets.SUPABASE_ACCESS_TOKEN }}
      SUPABASE_DB_PASSWORD: ${{ secrets.SUPABASE_DB_PASSWORD }}
      SUPABASE_PROJECT_ID: ${{ secrets.SUPABASE_PROJECT_ID }}

    steps:
      - uses: actions/checkout@v3

      - name: Verify Supabase secrets
        run: |
          if [ -z "$SUPABASE_PROJECT_ID" ]; then
            echo "::error::SUPABASE_PROJECT_ID secret is not set"
            exit 1
          fi
          if [ -z "$SUPABASE_ACCESS_TOKEN" ]; then
            echo "::error::SUPABASE_ACCESS_TOKEN secret is not set"
            exit 1
          fi
          if [ -z "$SUPABASE_DB_PASSWORD" ]; then
            echo "::error::SUPABASE_DB_PASSWORD secret is not set"
            exit 1
          fi
          echo "All required secrets are present"

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install dependencies
        run: |
          npm install --legacy-peer-deps
          npm install supabase@latest --save-dev --legacy-peer-deps
          npm audit fix --force || true

      - name: Verify Supabase installation
        run: |
          export PATH="$PATH:$(pwd)/node_modules/.bin"
          npx supabase --version

      - name: Validate Project ID format
        run: |
          echo "Project ID preview: ${SUPABASE_PROJECT_ID:0:4}...${SUPABASE_PROJECT_ID: -4}"
          if [ ${#SUPABASE_PROJECT_ID} -ne 20 ]; then
            echo "::error::Invalid Project ID length. Expected 20 characters, got ${#SUPABASE_PROJECT_ID}"
            exit 1
          fi

      - name: Initialize Supabase
        run: |
          export PATH="$PATH:$(pwd)/node_modules/.bin"
          npx supabase init --no-ssh

      - name: Link to Supabase project
        run: |
          export PATH="$PATH:$(pwd)/node_modules/.bin"
          npx supabase link --project-ref $SUPABASE_PROJECT_ID --password $SUPABASE_DB_PASSWORD
        env:
          SUPABASE_ACCESS_TOKEN: ${{ secrets.SUPABASE_ACCESS_TOKEN }}
